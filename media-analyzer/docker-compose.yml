services:
  # Django Backend with ASGI (WebSocket support)
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./media:/app/media
    environment:
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=media_analyzer
      - DB_USER=media_user
      - DB_PASSWORD=media_pass
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ./docker-entrypoint.sh web

  # Django Migrations (run manually)
  migrate:
    build: ./backend
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=media_analyzer
      - DB_USER=media_user
      - DB_PASSWORD=media_pass
    depends_on:
      postgres:
        condition: service_healthy
    command: ./docker-entrypoint.sh migrate
    profiles: ["tools"]  # Only runs when explicitly called

  # Celery Worker - Logo Detection Queue
  celery-logo:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./media:/app/media
    environment:
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=media_analyzer
      - DB_USER=media_user
      - DB_PASSWORD=media_pass
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ./docker-entrypoint.sh celery-worker --queues=logo_detection --hostname=logo-worker@%h

  # Celery Worker - Visual Analysis Queue  
  celery-visual:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./media:/app/media
    environment:
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=media_analyzer
      - DB_USER=media_user
      - DB_PASSWORD=media_pass
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ./docker-entrypoint.sh celery-worker --queues=visual_analysis --hostname=visual-worker@%h

  # Celery Worker - Default Queue
  celery-default:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./media:/app/media
    environment:
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=media_analyzer
      - DB_USER=media_user
      - DB_PASSWORD=media_pass
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ./docker-entrypoint.sh celery-worker --queues=default,config_management --hostname=default-worker@%h

  # Angular Frontend (Development mode)
  frontend:
    build:
      context: ./frontend
      target: development  # Use development stage
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true  # Enable polling for hot reload
    depends_on:
      - backend
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: media_analyzer
      POSTGRES_USER: media_user
      POSTGRES_PASSWORD: media_pass
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U media_user -d media_analyzer"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # NGINX with RTMP module for stream ingestion
  nginx-rtmp:
    image: tiangolo/nginx-rtmp
    ports:
      - "0.0.0.0:1935:1935"  # RTMP port - bind to all interfaces
      - "0.0.0.0:8081:80"    # HTTP port for HLS - bind to all interfaces
    volumes:
      - ./media:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data: